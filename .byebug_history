exit
element.search('.chartlist-artist a').first.text
element.search('.chartlist-artist a').first
element.search('.chartlist-artist').first.text.strip
element.search('.chartlist-artist').first.text
element.search('.chartlist-artist').first
element.search('.chartlist-artist')
element
exit
html_doc.search('.chartlist-row--with-artist').first.text
html_doc.search('.chartlist-row--with-artist').first
html_doc.search('.chartlist-row--with-artist')
html_doc
html_document.search('.chartlist-row--with-artist')
html_doc.class
html_docs.class
html_doc = Nokogiri::HTML(page)
page.class
page = open(url).read
exit
user["public_repos"]
user["login"]
user
user.class
user = JSON.parse(stringified_user)
stringified_user = open(url).read
open(url).read.class
open(url).read
open(url)
url
exit
JSON.generate(beers).class
JSON.generate(beers)
beers["beers"]
beers["beers"].first
beers["beers"]
beers["beers"].class
beers["beers"]
beers.class
beers[2]
beers.class
beers
c
JSON.parse(sb)["title"]
JSON.parse(sb)
sb = File.open(filepath).read
File.open(filepath).read.class
File.open(filepath).read
File.open(filepath).class
File.open(filepath)
exit
exi
csv
exit
beer
exit
row
continue
row[:appearance]
row[:name]
row["name"]
row.class
row
continue
row
csv_options[:col_sep]
csv_options
filepath
row
exit
row[0]
row[:name]
row
exit
row["name"]
row["Name"]
row.class
row
exit
exi
row
row.class
exit
row
filepath
